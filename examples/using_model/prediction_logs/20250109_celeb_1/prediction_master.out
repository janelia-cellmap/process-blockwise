Script contains unsafe elements:
 - Disallowed function call detected: eval
device: cpu
model loaded Sequential(
  (0): StandardUnet(
    (unet_backbone): UNet(
      (l_conv): ModuleList(
        (0): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(1, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (1): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(16, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (2): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(96, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (3): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(576, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(3456, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(3456, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
      )
      (l_down): ModuleList(
        (0-2): 3 x Downsample(
          (down): MaxPool3d(kernel_size=(2, 2, 2), stride=(2, 2, 2), padding=0, dilation=1, ceil_mode=False)
        )
      )
      (r_up): ModuleList(
        (0): ModuleList(
          (0-2): 3 x Upsample(
            (up): Upsample(scale_factor=(2.0, 2.0, 2.0), mode='nearest')
          )
        )
      )
      (r_conv): ModuleList(
        (0): ModuleList(
          (0): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(112, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
          (1): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(672, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
          (2): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(4032, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
        )
      )
    )
    (final_conv): Conv3d(16, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), padding=valid)
  )
  (1): Sigmoid()
)

Execution Summary
-----------------

  Task predict_20250109_celeb_1:

    num blocks : 9261
    completed ✔: 3620 (skipped 0)
    failed    ✗: 0
    orphaned  ∅: 0


------------------------------------------------------------
Sender: LSF System <lsfadmin@e10u03>
Subject: Job 142719051: <pred_maaaaster> in cluster <Janelia> Exited

Job <pred_maaaaster> was submitted from host <e02u30> by user <zouinkhim> in cluster <Janelia> at Fri Jan 10 10:37:30 2025
Job was executed on host(s) <12*e10u03>, in queue <local>, as user <zouinkhim> in cluster <Janelia> at Fri Jan 10 10:37:30 2025
</groups/scicompsoft/home/zouinkhim> was used as the home directory.
</groups/cellmap/cellmap/zouinkhim/process-blockwise/examples/using_model> was used as the working directory.
Started at Fri Jan 10 10:37:30 2025
Terminated at Fri Jan 10 10:42:35 2025
Results reported at Fri Jan 10 10:42:35 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python /groups/cellmap/cellmap/zouinkhim/process-blockwise/process_blockwise/predict_daisy.py predict -n 20250109_celeb_1 -c 438000 -cs 0:all_mem,1:organelle,2:mito,3:er,4:nucleus,5:pm,6:vs,7:ld -oc /nrs/cellmap/zouinkhim/predictions/cerebellum.zarr -od 20250109_celeb_1 -ic /nrs/cellmap/data/jrc_mus-cerebellum-1/jrc_mus-cerebellum-1.zarr -id recon-1/em/fibsem-uint8/s0 -w 4 --bsub --billing cellmap --roi [1000:10000,1000:10000,1000:10000] --script /groups/cellmap/cellmap/zouinkhim/process-blockwise/examples/using_model/model_spec.py
------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with signal termination: 14.

Resource usage summary:

    CPU time :                                   43.86 sec.
    Max Memory :                                 11121 MB
    Average Memory :                             3268.59 MB
    Total Requested Memory :                     184320.00 MB
    Delta Memory :                               173199.00 MB
    Max Swap :                                   -
    Max Processes :                              11
    Max Threads :                                51
    Run time :                                   303 sec.
    Turnaround time :                            305 sec.

The output (if any) is above this job summary.



PS:

Read file <prediction_logs/20250109_celeb_1/prediction_master.err> for stderr output of this job.

Script contains unsafe elements:
 - Disallowed function call detected: eval
device: cpu
model loaded Sequential(
  (0): StandardUnet(
    (unet_backbone): UNet(
      (l_conv): ModuleList(
        (0): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(1, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (1): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(16, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (2): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(96, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
        (3): ConvPass(
          (conv_pass): Sequential(
            (0): Conv3d(576, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (1): ReLU()
            (2): Conv3d(3456, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (3): ReLU()
            (4): Conv3d(3456, 3456, kernel_size=(3, 3, 3), stride=(1, 1, 1))
            (5): ReLU()
          )
        )
      )
      (l_down): ModuleList(
        (0-2): 3 x Downsample(
          (down): MaxPool3d(kernel_size=(2, 2, 2), stride=(2, 2, 2), padding=0, dilation=1, ceil_mode=False)
        )
      )
      (r_up): ModuleList(
        (0): ModuleList(
          (0-2): 3 x Upsample(
            (up): Upsample(scale_factor=(2.0, 2.0, 2.0), mode='nearest')
          )
        )
      )
      (r_conv): ModuleList(
        (0): ModuleList(
          (0): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(112, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
          (1): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(672, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
          (2): ConvPass(
            (conv_pass): Sequential(
              (0): Conv3d(4032, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (1): ReLU()
              (2): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1))
              (3): ReLU()
            )
          )
        )
      )
    )
    (final_conv): Conv3d(16, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), padding=valid)
  )
  (1): Sigmoid()
)
